Running contracts/assigment/AssignMappingStructS2L.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet support this expression.
        s2[msg.sender].x = b;
        ^--------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s2[msg.sender].x = b;
        ^------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet implement such assignments.
        s2[msg.sender].x = b;
        ^------------------^
smt_checker_input_iN7d:17:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_iN7d:17:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_iN7d:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:18:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:19:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == a);
               ^---------------^
smt_checker_input_iN7d:19:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == a);
               ^-------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = c;
        ^--------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s1[msg.sender].x = c;
        ^------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = c;
        ^------------------^
smt_checker_input_iN7d:22:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == c);
               ^--------------^
smt_checker_input_iN7d:22:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == c);
               ^------------^
smt_checker_input_iN7d:23:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:23:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:24:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == c);
               ^---------------^
smt_checker_input_iN7d:24:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == c);
               ^-------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet support this expression.
        loc[msg.sender].x = a;
        ^---------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        loc[msg.sender].x = a;
        ^-------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet implement such assignments.
        loc[msg.sender].x = a;
        ^-------------------^
smt_checker_input_iN7d:27:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_iN7d:27:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_iN7d:28:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:28:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:29:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == a);
               ^---------------^
smt_checker_input_iN7d:29:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == a);
               ^-------------^
smt_checker_input_iN7d:17:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = 2
  b = 1
  c = 0
  msg.sender = 1236

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:18:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = (- 1)
  b = 1
  c = 0
  msg.sender = 8855

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:19:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == a);
        ^----------------------------^
  for:
  a = (- 1)
  b = 0
  c = (- 2)
  msg.sender = 8365

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:22:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == c);
        ^---------------------------^
  for:
  a = 1
  b = 2
  c = 0
  msg.sender = 449

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:23:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = (- 2)
  b = 0
  c = (- 1)
  msg.sender = 5853

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:24:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == c);
        ^----------------------------^
  for:
  a = 0
  b = 1
  c = (- 1)
  msg.sender = 1142

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:27:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = (- 1)
  b = 1
  c = 0
  msg.sender = 535

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:28:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 2
  b = 1
  c = 0
  msg.sender = 8945

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:29:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == a);
        ^----------------------------^
  for:
  a = (- 2)
  b = (- 1)
  c = 0
  msg.sender = 2997

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_iN7d:14:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet support this expression.
        s2[msg.sender].x = b;
        ^--------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s2[msg.sender].x = b;
        ^------------^
smt_checker_input_iN7d:15:9: Warning: Assertion checker does not yet implement such assignments.
        s2[msg.sender].x = b;
        ^------------------^
smt_checker_input_iN7d:17:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_iN7d:17:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_iN7d:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:18:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:19:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == a);
               ^---------------^
smt_checker_input_iN7d:19:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == a);
               ^-------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = c;
        ^--------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        s1[msg.sender].x = c;
        ^------------^
smt_checker_input_iN7d:21:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = c;
        ^------------------^
smt_checker_input_iN7d:22:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == c);
               ^--------------^
smt_checker_input_iN7d:22:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == c);
               ^------------^
smt_checker_input_iN7d:23:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:23:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:24:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == c);
               ^---------------^
smt_checker_input_iN7d:24:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == c);
               ^-------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet support this expression.
        loc[msg.sender].x = a;
        ^---------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        loc[msg.sender].x = a;
        ^-------------^
smt_checker_input_iN7d:26:9: Warning: Assertion checker does not yet implement such assignments.
        loc[msg.sender].x = a;
        ^-------------------^
smt_checker_input_iN7d:27:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_iN7d:27:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_iN7d:28:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_iN7d:28:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_iN7d:29:16: Warning: Assertion checker does not yet support this expression.
        assert(loc[msg.sender].x == a);
               ^---------------^
smt_checker_input_iN7d:29:16: Warning: Assertion checker does not yet implement type struct AssignMappingStructS2L.S storage ref
        assert(loc[msg.sender].x == a);
               ^-------------^
smt_checker_input_iN7d:17:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 4679

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:18:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 974

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:19:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == a);
        ^----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 1888

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:22:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == c);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 1653

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:23:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 5904

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:24:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == c);
        ^----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 8456

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:27:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 1323

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:28:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 8879

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_iN7d:29:9: Warning: Assertion violation happens here
        assert(loc[msg.sender].x == a);
        ^----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 2240

Callstack: 
smt_checker_input_iN7d:34:9: 
        storToLoc(0, 1, 2);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
0.19user 0.05system 0:00.25elapsed 100%CPU (0avgtext+0avgdata 60308maxresident)k
0inputs+0outputs (0major+7124minor)pagefaults 0swaps
