Running contracts/assigment/AssignMappingArrayL2L.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_FCx9:11:9: Warning: Assertion checker does not yet implement this type of function call.
        s1[msg.sender].push(a);
        ^--------------------^
smt_checker_input_FCx9:12:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        s1[msg.sender][0] = a;
        ^---------------^
smt_checker_input_FCx9:13:9: Warning: Assertion checker does not yet implement this type of function call.
        s2[msg.sender].push(b);
        ^--------------------^
smt_checker_input_FCx9:14:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        s2[msg.sender][0] = b;
        ^---------------^
smt_checker_input_FCx9:21:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        sl1[msg.sender][0] = c;
        ^----------------^
smt_checker_input_FCx9:17:9: Warning: Assertion violation happens here
        assert(sl1[msg.sender][0] == a);
        ^-----------------------------^
  for:
  a = 0
  b = 2
  c = 1
  msg.sender = 2437
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818732)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564812249)
  sl1[msg.sender][0] = (- 1)

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:18:9: Warning: Assertion violation happens here
        assert(sl2[msg.sender][0] == b);
        ^-----------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564818170)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564818171)
  c = (- 57896044618658097711785492504343953926634992332820282019728792003956564818172)
  msg.sender = 449
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564817686)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811603)
  sl1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818170)
  sl2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818170)

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:22:9: Warning: Assertion violation happens here
        assert(sl1[msg.sender][0] == c);
        ^-----------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564811869)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564811868)
  c = (- 57896044618658097711785492504343953926634992332820282019728792003956564811870)
  msg.sender = 535
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564819687)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818826)
  sl1[msg.sender][0] = 608
  sl2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811868)

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:23:9: Warning: Assertion violation happens here
        assert(sl2[msg.sender][0] == c);
        ^-----------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564814048)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564814047)
  c = (- 57896044618658097711785492504343953926634992332820282019728792003956564814046)
  msg.sender = 2997
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564813685)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811023)
  sl1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814046)
  sl2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814047)

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:11:9: Warning: Assertion checker does not yet implement this type of function call.
        s1[msg.sender].push(a);
        ^--------------------^
smt_checker_input_FCx9:12:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        s1[msg.sender][0] = a;
        ^---------------^
smt_checker_input_FCx9:13:9: Warning: Assertion checker does not yet implement this type of function call.
        s2[msg.sender].push(b);
        ^--------------------^
smt_checker_input_FCx9:14:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        s2[msg.sender][0] = b;
        ^---------------^
smt_checker_input_FCx9:21:9: Warning: Assertion checker does not yet implement assignments to multi-dimensional mappings or arrays.
        sl1[msg.sender][0] = c;
        ^----------------^
smt_checker_input_FCx9:17:9: Warning: Assertion violation happens here
        assert(sl1[msg.sender][0] == a);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 1888
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818994)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564815289)
  sl1[msg.sender][0] = (- 1)

Callstack: 
smt_checker_input_FCx9:30:9: 
        locToLoc(0, 1, 2);
        ^---------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:18:9: Warning: Assertion violation happens here
        assert(sl2[msg.sender][0] == b);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 8456
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814064)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818315)
  sl1[msg.sender][0] = 0
  sl2[msg.sender][0] = 2

Callstack: 
smt_checker_input_FCx9:30:9: 
        locToLoc(0, 1, 2);
        ^---------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:22:9: Warning: Assertion violation happens here
        assert(sl1[msg.sender][0] == c);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 2240
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811089)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818645)
  sl1[msg.sender][0] = 3
  sl2[msg.sender][0] = 1

Callstack: 
smt_checker_input_FCx9:30:9: 
        locToLoc(0, 1, 2);
        ^---------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_FCx9:23:9: Warning: Assertion violation happens here
        assert(sl2[msg.sender][0] == c);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  c = 2
  msg.sender = 2446
  s1[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564817693)
  s2[msg.sender][0] = (- 57896044618658097711785492504343953926634992332820282019728792003956564810243)
  sl1[msg.sender][0] = 2
  sl2[msg.sender][0] = 1

Callstack: 
smt_checker_input_FCx9:30:9: 
        locToLoc(0, 1, 2);
        ^---------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
0.15user 0.25system 0:00.40elapsed 100%CPU (0avgtext+0avgdata 50788maxresident)k
0inputs+0outputs (0major+4714minor)pagefaults 0swaps
