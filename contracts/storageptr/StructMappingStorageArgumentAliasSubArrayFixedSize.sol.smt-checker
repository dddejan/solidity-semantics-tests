Running contracts/storageptr/StructMappingStorageArgumentAliasSubArrayFixedSize.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_9OIj:10:19: Warning: Assertion checker does not yet support the type of this variable.
    function test(S storage s1ref, S storage s2ref, int a, int b) internal {
                  ^-------------^
smt_checker_input_9OIj:10:36: Warning: Assertion checker does not yet support the type of this variable.
    function test(S storage s1ref, S storage s2ref, int a, int b) internal {
                                   ^-------------^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^---^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----------------^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^-----^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^-----------------^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----------------^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet support this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^-----^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^---^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet implement this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^-----------------^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet support this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^-----^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^---^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet implement this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^-----------------^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = a;
        ^-----^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = a;
        ^---^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = a;
        ^-----------------^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = a;
        ^-----------------^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet support this expression.
        s2ref.x[msg.sender] = b;
        ^-----^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s2ref.x[msg.sender] = b;
        ^---^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement this expression.
        s2ref.x[msg.sender] = b;
        ^-----------------^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement this expression.
        s2ref.x[msg.sender] = b;
        ^-----------------^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^-----^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^---^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet implement this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^-----------------^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet support this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^-----^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^---^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet implement this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^-----------------^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet support this expression.
        require(s[0].x[msg.sender] != b);
                ^----^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        require(s[0].x[msg.sender] != b);
                ^--^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet implement this expression.
        require(s[0].x[msg.sender] != b);
                ^----------------^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet support this expression.
        assert(s[1].x[msg.sender] == b);
               ^----^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        assert(s[1].x[msg.sender] == b);
               ^--^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet implement this expression.
        assert(s[1].x[msg.sender] == b);
               ^----------------^
smt_checker_input_9OIj:13:31: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---------------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  a = (- 1)
  b = 0
  msg.sender = 0
  s1ref_alias_s2ref = false

Callstack: 

smt_checker_input_9OIj:13:31: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---------------------^
  for:
  <result> = 0x010000000000000000000000000000000000000000000000000000000000000001
  a = 1
  b = 0
  msg.sender = 0
  s1ref_alias_s2ref = false

Callstack: 

smt_checker_input_9OIj:18:9: Warning: Assertion violation happens here
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
        ^------------------------------------------------^
  for:
  a = (- 1)
  b = 0
  msg.sender = 0
  s1ref_alias_s2ref = true

Callstack: 

smt_checker_input_9OIj:20:9: Warning: Assertion violation happens here
        assert(s[1].x[msg.sender] == b);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 0
  s1ref_alias_s2ref = true

Callstack: 

smt_checker_input_9OIj:25:14: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        test(s[1], s[1], 0, 1);
             ^--^
smt_checker_input_9OIj:25:20: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        test(s[1], s[1], 0, 1);
                   ^--^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^---^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----------------^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^-----^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---^
smt_checker_input_9OIj:13:31: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^-----------------^
smt_checker_input_9OIj:13:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
        ^-----------------^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet support this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^-----^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^---^
smt_checker_input_9OIj:14:30: Warning: Assertion checker does not yet implement this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                             ^-----------------^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet support this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^-----^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^---^
smt_checker_input_9OIj:14:53: Warning: Assertion checker does not yet implement this expression.
        s1ref_alias_s2ref = (s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                                    ^-----------------^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet support this expression.
        s1ref.x[msg.sender] = a;
        ^-----^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s1ref.x[msg.sender] = a;
        ^---^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = a;
        ^-----------------^
smt_checker_input_9OIj:16:9: Warning: Assertion checker does not yet implement this expression.
        s1ref.x[msg.sender] = a;
        ^-----------------^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet support this expression.
        s2ref.x[msg.sender] = b;
        ^-----^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        s2ref.x[msg.sender] = b;
        ^---^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement this expression.
        s2ref.x[msg.sender] = b;
        ^-----------------^
smt_checker_input_9OIj:17:9: Warning: Assertion checker does not yet implement this expression.
        s2ref.x[msg.sender] = b;
        ^-----------------^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^-----^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^---^
smt_checker_input_9OIj:18:16: Warning: Assertion checker does not yet implement this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
               ^-----------------^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet support this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^-----^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage pointer
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^---^
smt_checker_input_9OIj:18:39: Warning: Assertion checker does not yet implement this expression.
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
                                      ^-----------------^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet support this expression.
        require(s[0].x[msg.sender] != b);
                ^----^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        require(s[0].x[msg.sender] != b);
                ^--^
smt_checker_input_9OIj:19:17: Warning: Assertion checker does not yet implement this expression.
        require(s[0].x[msg.sender] != b);
                ^----------------^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet support this expression.
        assert(s[1].x[msg.sender] == b);
               ^----^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet implement type struct StructMappingStorageArgumentAliasSubArrayFixedSize.S storage ref
        assert(s[1].x[msg.sender] == b);
               ^--^
smt_checker_input_9OIj:20:16: Warning: Assertion checker does not yet implement this expression.
        assert(s[1].x[msg.sender] == b);
               ^----------------^
smt_checker_input_9OIj:13:31: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---------------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  a = 0
  b = 1
  msg.sender = 0
  s1ref_alias_s2ref = false

Callstack: 
smt_checker_input_9OIj:25:9: 
        test(s[1], s[1], 0, 1);
        ^--------------------^

smt_checker_input_9OIj:13:31: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        s1ref.x[msg.sender] = s2ref.x[msg.sender] + 1;
                              ^---------------------^
  for:
  <result> = 0x010000000000000000000000000000000000000000000000000000000000000001
  a = 0
  b = 1
  msg.sender = 0
  s1ref_alias_s2ref = false

Callstack: 
smt_checker_input_9OIj:25:9: 
        test(s[1], s[1], 0, 1);
        ^--------------------^

smt_checker_input_9OIj:18:9: Warning: Assertion violation happens here
        assert(s1ref.x[msg.sender] == s2ref.x[msg.sender]);
        ^------------------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 0
  s1ref_alias_s2ref = true

Callstack: 
smt_checker_input_9OIj:25:9: 
        test(s[1], s[1], 0, 1);
        ^--------------------^

smt_checker_input_9OIj:20:9: Warning: Assertion violation happens here
        assert(s[1].x[msg.sender] == b);
        ^-----------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 0
  s1ref_alias_s2ref = true

Callstack: 
smt_checker_input_9OIj:25:9: 
        test(s[1], s[1], 0, 1);
        ^--------------------^

0.10user 0.25system 0:00.35elapsed 99%CPU (0avgtext+0avgdata 38800maxresident)k
0inputs+0outputs (0major+2025minor)pagefaults 0swaps
