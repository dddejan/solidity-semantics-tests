Running contracts/storageptr/MappingStructLibraryStorageAliasSubArrayFixedSize.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_ZlF9:9:21: Warning: Assertion checker does not yet support this expression.
        int a_old = a[msg.sender].x;
                    ^-------------^
smt_checker_input_ZlF9:9:21: Warning: Assertion checker does not yet implement type struct L.S storage ref
        int a_old = a[msg.sender].x;
                    ^-----------^
smt_checker_input_ZlF9:10:21: Warning: Assertion checker does not yet support this expression.
        int b_old = b[msg.sender].x;
                    ^-------------^
smt_checker_input_ZlF9:10:21: Warning: Assertion checker does not yet implement type struct L.S storage ref
        int b_old = b[msg.sender].x;
                    ^-----------^
smt_checker_input_ZlF9:13:9: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = b[msg.sender].x + 1;
        ^-------------^
smt_checker_input_ZlF9:13:9: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = b[msg.sender].x + 1;
        ^-----------^
smt_checker_input_ZlF9:13:27: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = b[msg.sender].x + 1;
                          ^-------------^
smt_checker_input_ZlF9:13:27: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = b[msg.sender].x + 1;
                          ^-----------^
smt_checker_input_ZlF9:13:9: Warning: Assertion checker does not yet implement such assignments.
        a[msg.sender].x = b[msg.sender].x + 1;
        ^-----------------------------------^
smt_checker_input_ZlF9:14:22: Warning: Assertion checker does not yet support this expression.
        a_b_alias = (b[msg.sender].x == b_old + 1);
                     ^-------------^
smt_checker_input_ZlF9:14:22: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a_b_alias = (b[msg.sender].x == b_old + 1);
                     ^-----------^
smt_checker_input_ZlF9:17:9: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
        ^-------------^
smt_checker_input_ZlF9:17:9: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
        ^-----------^
smt_checker_input_ZlF9:17:27: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                          ^-------------^
smt_checker_input_ZlF9:17:27: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                          ^-----------^
smt_checker_input_ZlF9:17:45: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                                            ^-------------^
smt_checker_input_ZlF9:17:45: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                                            ^-----------^
smt_checker_input_ZlF9:17:9: Warning: Assertion checker does not yet implement such assignments.
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
        ^-------------------------------------------------^
smt_checker_input_ZlF9:18:9: Warning: Assertion checker does not yet support this expression.
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-------------^
smt_checker_input_ZlF9:18:9: Warning: Assertion checker does not yet implement type struct L.S storage ref
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-----------^
smt_checker_input_ZlF9:18:27: Warning: Assertion checker does not yet support this expression.
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------^
smt_checker_input_ZlF9:18:27: Warning: Assertion checker does not yet implement type struct L.S storage ref
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-----------^
smt_checker_input_ZlF9:18:45: Warning: Assertion checker does not yet support this expression.
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                                            ^-------------^
smt_checker_input_ZlF9:18:45: Warning: Assertion checker does not yet implement type struct L.S storage ref
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                                            ^-----------^
smt_checker_input_ZlF9:18:9: Warning: Assertion checker does not yet implement such assignments.
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-------------------------------------------------^
smt_checker_input_ZlF9:19:9: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-------------^
smt_checker_input_ZlF9:19:9: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-----------^
smt_checker_input_ZlF9:19:27: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------^
smt_checker_input_ZlF9:19:27: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-----------^
smt_checker_input_ZlF9:19:45: Warning: Assertion checker does not yet support this expression.
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                                            ^-------------^
smt_checker_input_ZlF9:19:45: Warning: Assertion checker does not yet implement type struct L.S storage ref
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                                            ^-----------^
smt_checker_input_ZlF9:19:9: Warning: Assertion checker does not yet implement such assignments.
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
        ^-------------------------------------------------^
smt_checker_input_ZlF9:20:30: Warning: Assertion checker does not yet support this expression.
        assert(!a_b_alias || a[msg.sender].x == 0); // alias => zero
                             ^-------------^
smt_checker_input_ZlF9:20:30: Warning: Assertion checker does not yet implement type struct L.S storage ref
        assert(!a_b_alias || a[msg.sender].x == 0); // alias => zero
                             ^-----------^
smt_checker_input_ZlF9:21:30: Warning: Assertion checker does not yet support this expression.
        assert(!a_b_alias || b[msg.sender].x == 0); // alias => zero
                             ^-------------^
smt_checker_input_ZlF9:21:30: Warning: Assertion checker does not yet implement type struct L.S storage ref
        assert(!a_b_alias || b[msg.sender].x == 0); // alias => zero
                             ^-----------^
smt_checker_input_ZlF9:13:27: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        a[msg.sender].x = b[msg.sender].x + 1;
                          ^-----------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:13:27: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        a[msg.sender].x = b[msg.sender].x + 1;
                          ^-----------------^
  for:
  <result> = 0x010000000000000000000000000000000000000000000000000000000000000001
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:14:41: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        a_b_alias = (b[msg.sender].x == b_old + 1);
                                        ^-------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  a_b_alias = false
  a_old = 4
  b_old = (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:14:41: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        a_b_alias = (b[msg.sender].x == b_old + 1);
                                        ^-------^
  for:
  <result> = 0x010000000000000000000000000000000000000000000000000000000000000001
  a_b_alias = false
  a_old = 4
  b_old = 2**256
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:17:27: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:17:27: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        a[msg.sender].x = a[msg.sender].x + b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = 2**256
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:18:27: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:18:27: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        b[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = 2**256
  a_b_alias = false
  a_old = 4
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:19:27: Warning: Underflow (resulting value less than -57896044618658097711785492504343953926634992332820282019728792003956564819968) happens here
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)
  a_b_alias = false
  a_old = 6
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:19:27: Warning: Overflow (resulting value larger than 0x80 * 2**248 - 1) happens here
        a[msg.sender].x = a[msg.sender].x - b[msg.sender].x;
                          ^-------------------------------^
  for:
  <result> = 2**256
  a_b_alias = false
  a_old = 6
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:20:9: Warning: Assertion violation happens here
        assert(!a_b_alias || a[msg.sender].x == 0); // alias => zero
        ^----------------------------------------^
  for:
  a_b_alias = true
  a_old = 9
  b_old = 0
  msg.sender = 0

Callstack: 

smt_checker_input_ZlF9:21:9: Warning: Assertion violation happens here
        assert(!a_b_alias || b[msg.sender].x == 0); // alias => zero
        ^----------------------------------------^
  for:
  a_b_alias = true
  a_old = 9
  b_old = 0
  msg.sender = 0

Callstack: 

0.23user 0.25system 0:00.48elapsed 100%CPU (0avgtext+0avgdata 40420maxresident)k
0inputs+0outputs (0major+2421minor)pagefaults 0swaps
