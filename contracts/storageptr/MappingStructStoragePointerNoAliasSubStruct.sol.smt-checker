Running contracts/storageptr/MappingStructStoragePointerNoAliasSubStruct.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_hHmI:10:5: Warning: Assertion checker does not yet support the type of this variable.
    Sub s2;
    ^----^
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender].x = b;
        ^----------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender].x = b;
        ^--^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.Sub storage ref
        s2.s[msg.sender].x = b;
        ^^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        s2.s[msg.sender].x = b;
        ^--------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender].x = b;
        ^--------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement such assignments.
        s2.s[msg.sender].x = b;
        ^--------------------^
smt_checker_input_hHmI:16:45: Warning: Assertion checker does not yet support this expression.
        mapping(address=>S) storage s2ref = s2.s;
                                            ^--^
smt_checker_input_hHmI:16:45: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.Sub storage ref
        mapping(address=>S) storage s2ref = s2.s;
                                            ^^
smt_checker_input_hHmI:17:16: Warning: Assertion checker does not yet support this expression.
        assert(s1ref[msg.sender].x == a);
               ^-----------------^
smt_checker_input_hHmI:17:16: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        assert(s1ref[msg.sender].x == a);
               ^---------------^
smt_checker_input_hHmI:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2ref[msg.sender].x == b);
               ^-----------------^
smt_checker_input_hHmI:18:16: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        assert(s2ref[msg.sender].x == b);
               ^---------------^
smt_checker_input_hHmI:17:9: Warning: Assertion violation happens here
        assert(s1ref[msg.sender].x == a);
        ^------------------------------^
  for:
  a = 0
  b = 0
  msg.sender = 38

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_hHmI:18:9: Warning: Assertion violation happens here
        assert(s2ref[msg.sender].x == b);
        ^------------------------------^
  for:
  a = 0
  b = 0
  msg.sender = 7719

Callstack: 

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_hHmI:13:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender].x = b;
        ^----------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender].x = b;
        ^--^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.Sub storage ref
        s2.s[msg.sender].x = b;
        ^^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        s2.s[msg.sender].x = b;
        ^--------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender].x = b;
        ^--------------^
smt_checker_input_hHmI:14:9: Warning: Assertion checker does not yet implement such assignments.
        s2.s[msg.sender].x = b;
        ^--------------------^
smt_checker_input_hHmI:16:45: Warning: Assertion checker does not yet support this expression.
        mapping(address=>S) storage s2ref = s2.s;
                                            ^--^
smt_checker_input_hHmI:16:45: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.Sub storage ref
        mapping(address=>S) storage s2ref = s2.s;
                                            ^^
smt_checker_input_hHmI:17:16: Warning: Assertion checker does not yet support this expression.
        assert(s1ref[msg.sender].x == a);
               ^-----------------^
smt_checker_input_hHmI:17:16: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        assert(s1ref[msg.sender].x == a);
               ^---------------^
smt_checker_input_hHmI:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2ref[msg.sender].x == b);
               ^-----------------^
smt_checker_input_hHmI:18:16: Warning: Assertion checker does not yet implement type struct MappingStructStoragePointerNoAliasSubStruct.S storage ref
        assert(s2ref[msg.sender].x == b);
               ^---------------^
smt_checker_input_hHmI:17:9: Warning: Assertion violation happens here
        assert(s1ref[msg.sender].x == a);
        ^------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 1236

Callstack: 
smt_checker_input_hHmI:23:9: 
        test(0, 1);
        ^--------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_hHmI:18:9: Warning: Assertion violation happens here
        assert(s2ref[msg.sender].x == b);
        ^------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 2437

Callstack: 
smt_checker_input_hHmI:23:9: 
        test(0, 1);
        ^--------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
0.05user 0.22system 0:00.28elapsed 99%CPU (0avgtext+0avgdata 43364maxresident)k
0inputs+0outputs (0major+3068minor)pagefaults 0swaps
