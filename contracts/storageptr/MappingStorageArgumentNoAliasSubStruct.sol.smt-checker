Running contracts/storageptr/MappingStorageArgumentNoAliasSubStruct.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_4V9y:9:5: Warning: Assertion checker does not yet support the type of this variable.
    Sub s2;
    ^----^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^--^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet implement this expression.
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^--------------^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^--^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^--------------^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^--^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^--------------^
smt_checker_input_4V9y:16:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] != s2.s[msg.sender]);
        ^----------------------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564811870)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564811869)
  msg.sender = 5853
  s1[msg.sender] = 0
  s1ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811870)
  s2ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811869)

Callstack: 

smt_checker_input_4V9y:17:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] == a || s1[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564811021)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564811023)
  msg.sender = 5920
  s1[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811022)
  s1ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811021)
  s2ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811023)

Callstack: 

smt_checker_input_4V9y:18:9: Warning: Assertion violation happens here
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
        ^----------------------------------------------------^
  for:
  a = 1
  b = 0
  msg.sender = 974
  s1[msg.sender] = 0
  s1ref[msg.sender] = 1
  s2ref[msg.sender] = 0

Callstack: 

smt_checker_input_4V9y:23:18: Warning: Assertion checker does not yet support this expression.
        test(s1, s2.s, 0, 1);
                 ^--^
smt_checker_input_4V9y:23:18: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        test(s1, s2.s, 0, 1);
                 ^^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^--^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^^
smt_checker_input_4V9y:16:34: Warning: Assertion checker does not yet implement this expression.
        assert(s1[msg.sender] != s2.s[msg.sender]);
                                 ^--------------^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^--^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^^
smt_checker_input_4V9y:18:16: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
               ^--------------^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^--^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet implement type struct MappingStorageArgumentNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^^
smt_checker_input_4V9y:18:41: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
                                        ^--------------^
smt_checker_input_4V9y:16:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] != s2.s[msg.sender]);
        ^----------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 8879
  s1[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564818315)
  s1ref[msg.sender] = 0
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_4V9y:23:9: 
        test(s1, s2.s, 0, 1);
        ^------------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_4V9y:17:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] == a || s1[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 2446
  s1[msg.sender] = 2
  s1ref[msg.sender] = 0
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_4V9y:23:9: 
        test(s1, s2.s, 0, 1);
        ^------------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_4V9y:18:9: Warning: Assertion violation happens here
        assert(s2.s[msg.sender] == a || s2.s[msg.sender] == b);
        ^----------------------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 6906
  s1[msg.sender] = 1
  s1ref[msg.sender] = 0
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_4V9y:23:9: 
        test(s1, s2.s, 0, 1);
        ^------------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
0.07user 0.03system 0:00.11elapsed 99%CPU (0avgtext+0avgdata 39148maxresident)k
0inputs+0outputs (0major+2119minor)pagefaults 0swaps
