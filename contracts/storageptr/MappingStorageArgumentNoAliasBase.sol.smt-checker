Running contracts/storageptr/MappingStorageArgumentNoAliasBase.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_7M6r:14:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] != s2[msg.sender]);
        ^--------------------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564811870)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564811869)
  msg.sender = 5853
  s1[msg.sender] = 0
  s1ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811870)
  s2[msg.sender] = 0
  s2ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564811869)

Callstack: 

smt_checker_input_7M6r:15:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] == a || s1[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564816969)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564816971)
  msg.sender = 8945
  s1[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564816970)
  s1ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564816969)
  s2[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564816969)
  s2ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564816971)

Callstack: 

smt_checker_input_7M6r:16:9: Warning: Assertion violation happens here
        assert(s2[msg.sender] == a || s2[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = (- 57896044618658097711785492504343953926634992332820282019728792003956564814062)
  b = (- 57896044618658097711785492504343953926634992332820282019728792003956564814064)
  msg.sender = 1653
  s1[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814064)
  s1ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814062)
  s2[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814063)
  s2ref[msg.sender] = (- 57896044618658097711785492504343953926634992332820282019728792003956564814064)

Callstack: 

smt_checker_input_7M6r:14:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] != s2[msg.sender]);
        ^--------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 9725
  s1[msg.sender] = (- 1)
  s1ref[msg.sender] = 0
  s2[msg.sender] = (- 2)
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_7M6r:23:9: 
        test(s1, s2, 0, 1);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_7M6r:15:9: Warning: Assertion violation happens here
        assert(s1[msg.sender] == a || s1[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 6906
  s1[msg.sender] = (- 1)
  s1ref[msg.sender] = 0
  s2[msg.sender] = (- 2)
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_7M6r:23:9: 
        test(s1, s2, 0, 1);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
smt_checker_input_7M6r:16:9: Warning: Assertion violation happens here
        assert(s2[msg.sender] == a || s2[msg.sender] == b);
        ^------------------------------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 867
  s1[msg.sender] = (- 1)
  s1ref[msg.sender] = 0
  s2[msg.sender] = (- 2)
  s2ref[msg.sender] = 1

Callstack: 
smt_checker_input_7M6r:23:9: 
        test(s1, s2, 0, 1);
        ^----------------^

Note that array aliasing is not supported, therefore all mapping information is erased after a mapping local variable/parameter is assigned.
You can re-introduce information using require().
0.11user 0.01system 0:00.12elapsed 100%CPU (0avgtext+0avgdata 39624maxresident)k
0inputs+0outputs (0major+2164minor)pagefaults 0swaps
