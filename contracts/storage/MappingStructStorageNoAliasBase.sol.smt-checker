Running contracts/storage/MappingStructStorageNoAliasBase.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet support this expression.
        s2[msg.sender].x = b;
        ^--------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        s2[msg.sender].x = b;
        ^------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet implement such assignments.
        s2[msg.sender].x = b;
        ^------------------^
smt_checker_input_2dwN:14:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_2dwN:14:16: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_2dwN:15:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_2dwN:15:16: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_2dwN:14:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = 0
  b = 0
  msg.sender = 0

Callstack: 

smt_checker_input_2dwN:15:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 0
  b = 0
  msg.sender = 0

Callstack: 

smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet support this expression.
        s1[msg.sender].x = a;
        ^--------------^
smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        s1[msg.sender].x = a;
        ^------------^
smt_checker_input_2dwN:12:9: Warning: Assertion checker does not yet implement such assignments.
        s1[msg.sender].x = a;
        ^------------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet support this expression.
        s2[msg.sender].x = b;
        ^--------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        s2[msg.sender].x = b;
        ^------------^
smt_checker_input_2dwN:13:9: Warning: Assertion checker does not yet implement such assignments.
        s2[msg.sender].x = b;
        ^------------------^
smt_checker_input_2dwN:14:16: Warning: Assertion checker does not yet support this expression.
        assert(s1[msg.sender].x == a);
               ^--------------^
smt_checker_input_2dwN:14:16: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        assert(s1[msg.sender].x == a);
               ^------------^
smt_checker_input_2dwN:15:16: Warning: Assertion checker does not yet support this expression.
        assert(s2[msg.sender].x == b);
               ^--------------^
smt_checker_input_2dwN:15:16: Warning: Assertion checker does not yet implement type struct MappingStructStorageNoAliasBase.S storage ref
        assert(s2[msg.sender].x == b);
               ^------------^
smt_checker_input_2dwN:14:9: Warning: Assertion violation happens here
        assert(s1[msg.sender].x == a);
        ^---------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 0

Callstack: 
smt_checker_input_2dwN:20:9: 
        test(0, 1);
        ^--------^

smt_checker_input_2dwN:15:9: Warning: Assertion violation happens here
        assert(s2[msg.sender].x == b);
        ^---------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 0

Callstack: 
smt_checker_input_2dwN:20:9: 
        test(0, 1);
        ^--------^

0.06user 0.23system 0:00.29elapsed 99%CPU (0avgtext+0avgdata 43284maxresident)k
0inputs+0outputs (0major+3028minor)pagefaults 0swaps
