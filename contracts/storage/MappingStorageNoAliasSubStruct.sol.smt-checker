Running contracts/storage/MappingStorageNoAliasSubStruct.sol
Warning: This is a pre-release compiler version, please do not use it in production.
smt_checker_input_HcRD:9:5: Warning: Assertion checker does not yet support the type of this variable.
    Sub s2;
    ^----^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender] = b;
        ^--^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement type struct MappingStorageNoAliasSubStruct.Sub storage ref
        s2.s[msg.sender] = b;
        ^^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender] = b;
        ^--------------^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender] = b;
        ^--------------^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == b);
               ^--^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet implement type struct MappingStorageNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == b);
               ^^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == b);
               ^--------------^
smt_checker_input_HcRD:15:9: Warning: Assertion violation happens here
        assert(s2.s[msg.sender] == b);
        ^---------------------------^
  for:
  a = 0
  b = 0
  msg.sender = 7719
  s1[msg.sender] = 0

Callstack: 

smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet support this expression.
        s2.s[msg.sender] = b;
        ^--^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement type struct MappingStorageNoAliasSubStruct.Sub storage ref
        s2.s[msg.sender] = b;
        ^^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender] = b;
        ^--------------^
smt_checker_input_HcRD:13:9: Warning: Assertion checker does not yet implement this expression.
        s2.s[msg.sender] = b;
        ^--------------^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet support this expression.
        assert(s2.s[msg.sender] == b);
               ^--^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet implement type struct MappingStorageNoAliasSubStruct.Sub storage ref
        assert(s2.s[msg.sender] == b);
               ^^
smt_checker_input_HcRD:15:16: Warning: Assertion checker does not yet implement this expression.
        assert(s2.s[msg.sender] == b);
               ^--------------^
smt_checker_input_HcRD:15:9: Warning: Assertion violation happens here
        assert(s2.s[msg.sender] == b);
        ^---------------------------^
  for:
  a = 0
  b = 1
  msg.sender = 2437
  s1[msg.sender] = 0

Callstack: 
smt_checker_input_HcRD:20:9: 
        test(0, 1);
        ^--------^

0.05user 0.22system 0:00.27elapsed 100%CPU (0avgtext+0avgdata 41828maxresident)k
0inputs+0outputs (0major+2600minor)pagefaults 0swaps
